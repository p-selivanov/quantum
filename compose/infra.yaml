version: "3.8"

services:
  localstack:
    image: localstack/localstack:1.4.0
    container_name: localstack
    environment:
      - DEBUG=0
      - PROVIDER_OVERRIDE_LAMBDA=asf
      - LAMBDA_EXECUTOR=docker-reuse
      - DOCKER_HOST=unix:///var/run/docker.sock
    ports:
      - 4566:4566
    volumes:
      - ./localstack-init.sh:/etc/localstack/init/ready.d/localstack-init.sh
      - /var/run/docker.sock:/var/run/docker.sock
    profiles:
      - localstack
      - infra
      - all
 
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    profiles:
      - kafka
      - infra
      - all 
 
  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9094,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    profiles:
      - kafka
      - infra
      - all
 
  kafka-init:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka-init
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9094 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9094 --create --if-not-exists --topic customer-events --replication-factor 1 --partitions 30

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9094 --list
      "
    depends_on:
      - kafka
    profiles:
      - kafka
      - infra
      - all

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.5.0
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - 9080:8080
    depends_on:
      - zookeeper
      - kafka
    profiles:
      - kafka
      - infra
      - all

networks:
  default:
    name: quantum-network
    driver: bridge